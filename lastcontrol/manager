#!/bin/bash

WDIR=/usr/local/lastcontrol
RDIR=$WDIR/reports
CREATE=$WDIR/scripts/lctuiscripts/create-tui-report-linux.sh
RPTLIN=$WDIR/scripts/linux/create-report-linux.sh
MACHINESCRIPT=/usr/local/lastcontrol/scripts/machinescripts
PDFSTORE=$RDIR/pdfreports
PDFREPORTS=/var/www/html/reports
BOARDFILE=/usr/local/lastcontrol/doc/board.txt

NWADAPTER=$(ip r | grep onlink | cut -d " " -f5)
HOSTIP=$(ifconfig enp0s3 |grep "inet" |grep "netmask" | xargs | cut -d " " -f2)
#HOSTIP=$(hostname -I)
HOSTOS=$(hostnamectl | grep "Operating System" | cut -d ":" -f2 | xargs)
HOSTHNAME=$(cat /etc/hostname)

mkdir -p $PDFSTORE

function pause(){
local message="$@"
[ -z $message ] && message="Press Enter to continue"
read -p "$message" readEnterKey
}

function show_menu(){
BOARDMSG=$(cat $BOARDFILE)
MACHDATE=$(date)
echo -e "\e[1;37;1m$MACHDATE\e[0m"
pwd
echo "------------------------------"
BANNERCOLOR=$((1 + "$RANDOM" % 9))
tput setaf "$BANNERCOLOR"
cat $WDIR/doc/banner.txt
echo ""
tput setaf 9
echo "    V2 Update:21"
echo "    $HOSTOS - IP: $HOSTIP"
tput setaf 8
tput sgr0
echo "   |------------------------------------------------------------------|"
echo "   | # REPORT MENU #                                                  |"
echo "   |------------------------------------------------------------------|"
echo "   | 1. System  Report  | 6. Local User Report | 11. Process Report   |"
echo "   | 2. Service Report  | 7. Inventory Report  |                      |"
echo "   | 3. Disk    Report  | 8. Update Report     |                      |"
echo "   | 4. Network Report  |                      |                      |"
echo "   | 5. SSH     Report  |                      |                      |"
echo "   |------------------------------------------------------------------|"
echo "   | 20. Take All Report                                              |"
echo "   |------------------------------------------------------------------|"
echo "   | # MACHINE MENU #                                                 |"
echo "   |------------------------------------------------------------------|"
echo "   | 30. Add    Machine | 32. Machine List                            |"
echo "   | 31. Remove Machine |                                             |"
echo "   |------------------------------------------------------------------|"
echo "   | 40. Add SSH-Key    | 41. Remove SSH-Key                          |"
echo "   |------------------------------------------------------------------|"
tput setaf 9
echo "                             -----------                               "
echo "                             ** BOARD **                               "
echo "                             -----------                               "
tput setaf 1
tput sgr0
echo "     $BOARDMSG                                                         "
echo "   --------------------------------------------------------------------"
echo "    Download Reports: http://$HOSTIP/pdfreports                        "
tput setaf 9
echo ""
echo "    -----------"
echo "    | 99.Exit |"
echo "    -----------"
tput sgr0
echo ""
}

function create_system_report(){
	read -p "Enter the Machine Hostname : " TARGETMACHINE
	echo ""
	tput setaf 9
	echo "::.. Generating System Report... ..::"
	echo ""
	nc -z -w 2 $TARGETMACHINE 22 2>/dev/null
	if [ "$?" = "0" ]; then
		bash $RPTLIN systemreport $TARGETMACHINE
		tput setaf 7
		echo ""
		cat $RDIR/$TARGETMACHINE/$TARGETMACHINE-systemreport.txt
		tput sgr 0
		echo ""
		
		pandoc -s -o $PDFSTORE/$TARGETMACHINE-systemreport.pdf $RDIR/$TARGETMACHINE/$TARGETMACHINE-systemreport.md
		cp $PDFSTORE/$TARGETMACHINE-systemreport.pdf $PDFREPORTS/
		pause
	else
		tput setaf 2
		echo "Could not reach $TARGETMACHINE"
		tput sgr 0
		echo -e
		pause
	fi
}

function create_service_report(){
	read -p "Enter the Machine Hostname : " TARGETMACHINE
	echo ""
	tput setaf 9
	echo "::.. Generating Service Report... ..::"
	echo ""
	bash $RPTLIN servicereport $TARGETMACHINE
	tput setaf 7
	echo ""
	cat $RDIR/$TARGETMACHINE/$TARGETMACHINE-servicereport.txt
	tput sgr 0
	echo ""

	# adding listening services output image
	cat $RDIR/$TARGETMACHINE/$TARGETMACHINE-listeningservice.txt | grep -v "tcp6" | convert label:@- /tmp/$TARGETMACHINE-listeningservices.png
	echo "" >> $RDIR/$TARGETMACHINE/$TARGETMACHINE-servicereport.md
	echo "\newpage" >> $RDIR/$TARGETMACHINE/$TARGETMACHINE-servicereport.md
	echo "" >> $RDIR/$TARGETMACHINE/$TARGETMACHINE-servicereport.md
	echo "## Listening Service List ##" >> $RDIR/$TARGETMACHINE/$TARGETMACHINE-servicereport.md
	echo "" >> $RDIR/$TARGETMACHINE/$TARGETMACHINE-servicereport.md
	echo "![](/tmp/$TARGETMACHINE-listeningservices.png){ width=80% }" >> $RDIR/$TARGETMACHINE/$TARGETMACHINE-servicereport.md
	echo "" >> $RDIR/$TARGETMACHINE/$TARGETMACHINE-servicereport.md
	echo "---" >> $RDIR/$TARGETMACHINE/$TARGETMACHINE-servicereport.md

	# adding established services output image
	cat $RDIR/$TARGETMACHINE/$TARGETMACHINE-establishedservice.txt | convert label:@- /tmp/$TARGETMACHINE-establishedservices.png
	echo "" >> $RDIR/$TARGETMACHINE/$TARGETMACHINE-servicereport.md
	###echo "\newpage" >> $RDIR/$TARGETMACHINE/$TARGETMACHINE-servicereport.md
	echo "" >> $RDIR/$TARGETMACHINE/$TARGETMACHINE-servicereport.md
	echo "## Established Service List ##" >> $RDIR/$TARGETMACHINE/$TARGETMACHINE-servicereport.md
	echo "" >> $RDIR/$TARGETMACHINE/$TARGETMACHINE-servicereport.md
	echo "![](/tmp/$TARGETMACHINE-establishedservices.png){ width=80% }" >> $RDIR/$TARGETMACHINE/$TARGETMACHINE-servicereport.md
	echo "" >> $RDIR/$TARGETMACHINE/$TARGETMACHINE-servicereport.md
	echo "---" >> $RDIR/$TARGETMACHINE/$TARGETMACHINE-servicereport.md
	
	pandoc -s -o $PDFSTORE/$TARGETMACHINE-servicereport.pdf $RDIR/$TARGETMACHINE/$TARGETMACHINE-servicereport.md
	cp $PDFSTORE/$TARGETMACHINE-servicereport.pdf $PDFREPORTS/
	pause
}

function create_disk_report(){
	read -p "Enter the Machine Hostname : " TARGETMACHINE
	echo ""
	tput setaf 9
	echo "::.. Generating Local Disk Report... ..::"
	echo ""
	bash $RPTLIN diskreport $TARGETMACHINE
	tput setaf 7
	echo ""
	cat $RDIR/$TARGETMACHINE/$TARGETMACHINE-diskreport.txt
	tput sgr 0
	echo ""
	
	pandoc -s -o $PDFSTORE/$TARGETMACHINE-diskreport.pdf $RDIR/$TARGETMACHINE/$TARGETMACHINE-diskreport.md
	cp $PDFSTORE/$TARGETMACHINE-diskreport.pdf $PDFREPORTS/
	pause
}

function create_nwconfig_report(){
	read -p "Enter the Machine Hostname : " TARGETMACHINE
	echo ""
	tput setaf 9
	echo "::.. Generating Network Config Report... ..::"
	echo ""
	bash $RPTLIN nwconfigreport $TARGETMACHINE
	tput setaf 7
	echo ""
	cat $RDIR/$TARGETMACHINE/$TARGETMACHINE-nwconfigreport.txt
	tput sgr 0
	echo ""
	
	pandoc -s -o $PDFSTORE/$TARGETMACHINE-nwconfigreport.pdf $RDIR/$TARGETMACHINE/$TARGETMACHINE-nwconfigreport.md
	cp $PDFSTORE/$TARGETMACHINE-nwconfigreport.pdf $PDFREPORTS/
	pause
}

function create_ssh_report(){
	read -p "Enter the Machine Hostname : " TARGETMACHINE
	echo ""
	tput setaf 9
	echo "::.. Generating SSH Config Report... ..::"
	echo ""
	bash $RPTLIN sshreport $TARGETMACHINE
	tput setaf 7
	echo ""
	cat $RDIR/$TARGETMACHINE/$TARGETMACHINE-sshreport.txt
	tput sgr 0
	echo ""
	
	pandoc -s -o $PDFSTORE/$TARGETMACHINE-sshreport.pdf $RDIR/$TARGETMACHINE/$TARGETMACHINE-sshreport.md
	mkdir -p $PDFREPORTS/$TARGETMACHINE
	cp $PDFSTORE/$TARGETMACHINE-sshreport.pdf $PDFREPORTS/$TARGETMACHINE/
	cp $RDIR/$TARGETMACHINE/$TARGETMACHINE-sshreport.txt $PDFREPORTS/$TARGETMACHINE/
	pause
}

function create_localuser_report(){
	read -p "Enter the Machine Hostname : " TARGETMACHINE
	echo ""
	tput setaf 9
	echo "::.. Generating Local User Report... ..::"
	echo ""
	bash $RPTLIN localuserreport $TARGETMACHINE
	tput setaf 7
	echo ""
	cat $RDIR/$TARGETMACHINE/$TARGETMACHINE-localuserreport.txt
	tput sgr 0
	echo ""
	
	pandoc -s -o $PDFSTORE/$TARGETMACHINE-localuserreport.pdf $RDIR/$TARGETMACHINE/$TARGETMACHINE-localuserreport.md
	cp $PDFSTORE/$TARGETMACHINE-localuserreport.pdf $PDFREPORTS/
	pause
}

function create_inventory_report(){
        read -p "Enter the Machine Hostname : " TARGETMACHINE
        echo ""
        tput setaf 9
        echo "::.. Generating Hardware Inventory Report... ..::"
        echo ""
        bash $RPTLIN inventoryreport $TARGETMACHINE
        tput setaf 7
        echo ""
        cat $RDIR/$TARGETMACHINE/$TARGETMACHINE-inventoryreport.txt
        tput sgr 0
        echo ""

        pandoc -s -o $PDFSTORE/$TARGETMACHINE-inventoryreport.pdf $RDIR/$TARGETMACHINE/$TARGETMACHINE-inventoryreport.md
	cp $PDFSTORE/$TARGETMACHINE-inventoryreport.pdf $PDFREPORTS/
        pause
}

function create_update_report(){
	read -p "Enter the Machine Hostname : " TARGETMACHINE
	echo ""
	tput setaf 9
	echo "::.. Generating System Update Report... ..::"
	echo ""
	bash $RPTLIN updatereport $TARGETMACHINE
	tput setaf 7
	echo ""
	cat $RDIR/$TARGETMACHINE/$TARGETMACHINE-updatereport.txt
	tput sgr 0
	echo ""
	
	pause
}

function create_process_report(){
	read -p "Enter the Machine Hostname : " TARGETMACHINE
	echo ""
	tput setaf 9
	echo "::.. Generating Process & Load Report... ..::"
	echo ""
	bash $RPTLIN processreport $TARGETMACHINE
	tput setaf 7
	echo ""
	cat $RDIR/$TARGETMACHINE/$TARGETMACHINE-processreport.txt
	tput sgr 0
	echo ""
	
	pandoc -s -o $PDFSTORE/$TARGETMACHINE-processreport.pdf $RDIR/$TARGETMACHINE/$TARGETMACHINE-processreport.md
	cp $PDFSTORE/$TARGETMACHINE-processreport.pdf $PDFREPORTS/
	pause
}


function take_all_report(){
tput setaf 10
echo "Generating all report for all machine.."
echo ""
echo ""
tput sgr 0

systemctl restart lastcontrol.service
watch -en 1 systemctl status lastcontrol.service
systemctl disable lastcontrol.service

echo "Info: All Report generated." > $BOARDFILE
pause
}

function add_machine(){
tput setaf 10
echo "Adding a New Machine"
echo ""
tput sgr 0

read -p "Enter the Machine Hostname : " TARGETMACHINE
LISTED=FALSE
ack "$TARGETMACHINE" $WDIR/linuxmachine >> /dev/null && LISTED=TRUE

if [ "$LISTED" = FALSE ]; then
	echo "$TARGETMACHINE" >> $WDIR/linuxmachine
else
	tput setaf 9
	echo "$TARGETMACHINE already exist"
	tput sgr 0
fi

echo ""
tput setaf 10
echo "::. Machine List ::."
echo "--------------------"
tput sgr 0
cat $WDIR/linuxmachine
tput setaf 10
echo "--------------------"
tput sgr 0
echo ""
pause
}

function remove_machine(){
echo ""
tput setaf 10
echo "Removing Machine"
echo ""
tput sgr 0

read -p "Enter the Machine Hostname : " TARGETMACHINE
sed -i "/$TARGETMACHINE/d" $WDIR/linuxmachine

echo ""
tput setaf 10
echo "::. Machine List ::."
echo "--------------------"
tput sgr 0
cat $WDIR/linuxmachine
tput setaf 10
echo "--------------------"
tput sgr 0
echo ""
pause
}

function machine_list(){
echo ""
tput setaf 10
echo "::. Machine List ::."
echo "--------------------"
tput sgr 0
cat $WDIR/linuxmachine
tput setaf 10
echo "--------------------"
tput sgr 0
echo ""
pause
}

function add_sshkey(){
echo ""
read -p "Enter the Machine Hostname : " TARGETMACHINE
bash $MACHINESCRIPT/add-sshkey.sh $TARGETMACHINE
pause
}

function remove_sshkey(){
echo ""
read -p "Enter the Machine Hostname : " TARGETMACHINE
KEYCONTENT=$(cat /root/.ssh/lastcontrol.pub | cut -d " " -f2 | cut -c 1-25)
bash $MACHINESCRIPT/remove-sshkey.sh $TARGETMACHINE $KEYCONTENT
pause
}

function read_input(){
tput setaf 7
local c
read -p "You can choose from the menu numbers " c
tput sgr0
case $c in
1) create_system_report ;;
2) create_service_report ;;
3) create_disk_report ;;
4) create_nwconfig_report ;;
5) create_ssh_report ;;
6) create_localuser_report ;;
7) create_inventory_report ;;
8) create_update_report ;;
11) create_process_report ;;
20) take_all_report ;;
30) add_machine ;;
31) remove_machine ;;
32) machine_list ;;
40) add_sshkey ;;
41) remove_sshkey ;;
99) exit 0 ;;
*)
tput setaf 1
echo "Please select from the menu numbers"
tput sgr0
pause
esac
}

# CTRL+C, CTRL+Z
trap '' SIGINT SIGQUIT SIGTSTP

while true
do
clear
show_menu
read_input
done
