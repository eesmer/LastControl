#!/bin/bash

WDIR=/usr/local/lastcontrol
RDIR=/usr/local/lastcontrolreports
CREATE=$WDIR/scripts/tuiscripts/create-tui-report-linux.sh
TUISCRIPTS=$WDIR/scripts/tuiscripts

function pause(){
local message="$@"
[ -z $message ] && message="Press Enter to continue"
read -p "$message" readEnterKey
}

function show_menu(){
MACHDATE=$(date)
echo -e "\e[1;37;1m$MACHDATE\e[0m"
pwd
echo "------------------------------"
BANNERCOLOR=$((1 + "$RANDOM" % 9))
tput setaf "$BANNERCOLOR"
cat $WDIR/doc/banner.txt
echo ""
tput setaf 9
echo "    V2 Update:13"
tput sgr0
echo "   |------------------------------------------------------------------|"
echo "   | # REPORT MENU #                                                  |"
echo "   |------------------------------------------------------------------|"
echo "   | 1. System  Report  | 5. Local User    Report  | 9.               |"
echo "   | 2. Service Report  | 6. Vulnerability Report  | 10.              |"
echo "   | 3. Network Report  | 7. Inventory     Report  | 11.              |"
echo "   | 4. SSH     Report  | 8.                       | 12.              |"
echo "   |------------------------------------------------------------------|"
echo "   | 20. Take All Report                                              |"
echo "   |------------------------------------------------------------------|"
echo "   | # MACHINE MENU #                                                 |"
echo "   |------------------------------------------------------------------|"
echo "   | 30. Add Machine   | 31. Remove Machine      | 32. Machine List   |"
echo "   |------------------------------------------------------------------|"
echo "   | # HOST MENU #                                                    |"
echo "   |------------------------------------------------------------------|"
echo "   | 41. Set IP        | 42. Show IP                                  |"
echo "   |------------------------------------------------------------------|"
echo "   | 50. Handbook                                                     |"
echo "   |------------------------------------------------------------------|"
tput setaf 9
echo "     99.Exit"
tput sgr0
echo ""
}

function create_system_report(){
	read -p "Hostname or IP Adress : " TARGETMACHINE
	echo ""
	tput setaf 9
	echo "::.. Generating System Report... ..::"
	echo ""
	bash $CREATE systemreport $TARGETMACHINE
	tput setaf 7
	echo ""
	#pandoc -s -o $RDIR/$TARGETMACHINE-systemreport.txt $RDIR/$TARGETMACHINE-systemreport.md
	cat $RDIR/$TARGETMACHINE-systemreport.txt
	tput sgr 0
	echo ""
	pause
}

function create_service_report(){
	read -p "Hostname or IP Adress : " TARGETMACHINE
	echo ""
	tput setaf 9
	echo "::.. Generating Service Report... ..::"
	echo ""
	bash $CREATE servicereport $TARGETMACHINE
	tput setaf 7
	echo ""
	cat $RDIR/$TARGETMACHINE-servicereport.txt
	tput sgr 0
	echo ""

	# adding listening services output image
	cat $RDIR/$TARGETMACHINE-listeningservice.txt | grep -v "tcp6" | convert label:@- /tmp/$TARGETMACHINE-listeningservices.png
	echo "" >> $RDIR/$TARGETMACHINE-servicereport.md
	echo "\newpage" >> $RDIR/$TARGETMACHINE-servicereport.md
	echo "" >> $RDIR/$TARGETMACHINE-servicereport.md
	echo "## Listening Service List ##" >> $RDIR/$TARGETMACHINE-servicereport.md
	echo "" >> $RDIR/$TARGETMACHINE-servicereport.md
	echo "![](/tmp/$TARGETMACHINE-listeningservices.png){ width=80% }" >> $RDIR/$TARGETMACHINE-servicereport.md
	echo "" >> $RDIR/$TARGETMACHINE-servicereport.md
	echo "---" >> $RDIR/$TARGETMACHINE-servicereport.md

	# adding established services output image
	cat $RDIR/$TARGETMACHINE-establishedservice.txt | convert label:@- /tmp/$TARGETMACHINE-establishedservices.png
	echo "" >> $RDIR/$TARGETMACHINE-servicereport.md
	###echo "\newpage" >> $RDIR/$TARGETMACHINE-servicereport.md
	echo "" >> $RDIR/$TARGETMACHINE-servicereport.md
	echo "## Established Service List ##" >> $RDIR/$TARGETMACHINE-servicereport.md
	echo "" >> $RDIR/$TARGETMACHINE-servicereport.md
	echo "![](/tmp/$TARGETMACHINE-establishedservices.png){ width=80% }" >> $RDIR/$TARGETMACHINE-servicereport.md
	echo "" >> $RDIR/$TARGETMACHINE-servicereport.md
	echo "---" >> $RDIR/$TARGETMACHINE-servicereport.md
	
	pandoc -s -o /tmp/$TARGETMACHINE-servicereport.pdf $RDIR/$TARGETMACHINE-servicereport.md
	pause
}

function create_nwconfig_report(){
	read -p "Hostname or IP Adress : " TARGETMACHINE
	echo ""
	tput setaf 9
	echo "::.. Generating Network Config Report... ..::"
	echo ""
	bash $CREATE nwconfigreport $TARGETMACHINE
	tput setaf 7
	echo ""
	cat $RDIR/$TARGETMACHINE-nwconfigreport.txt
	tput sgr 0
	echo ""
	
	pandoc -s -o /tmp/$TARGETMACHINE-nwconfigreport.pdf $RDIR/$TARGETMACHINE-nwconfigreport.md
	pause
}

function create_ssh_report(){
	read -p "Hostname or IP Adress : " TARGETMACHINE
	echo ""
	tput setaf 9
	echo "::.. Generating SSH Config Report... ..::"
	echo ""
	bash $CREATE sshreport $TARGETMACHINE
	tput setaf 7
	echo ""
	cat $RDIR/$TARGETMACHINE-sshreport.txt
	tput sgr 0
	echo ""
	
	pandoc -s -o /tmp/$TARGETMACHINE-sshreport.pdf $RDIR/$TARGETMACHINE-sshreport.md
	pause
}

function create_localuser_report(){
	read -p "Hostname or IP Adress : " TARGETMACHINE
	echo ""
	tput setaf 9
	echo "::.. Generating Local User Report... ..::"
	echo ""
	bash $CREATE localuserreport $TARGETMACHINE
	tput setaf 7
	echo ""
	cat $RDIR/$TARGETMACHINE-localuserreport.txt
	tput sgr 0
	echo ""
	
	pandoc -s -o /tmp/$TARGETMACHINE-localuserreport.pdf $RDIR/$TARGETMACHINE-localuserreport.md
	pause
}

function take_all_report(){
tput setaf 10
echo "Generating all report for all machine.."
tput sgr 0

systemctl restart lastcontrol.service
watch -en 1 systemctl status lastcontrol.service
systemctl disable lastcontrol.service
pause
}

function read_input(){
tput setaf 7
local c
read -p "You can choose from the menu numbers " c
tput sgr0
case $c in
1) create_system_report ;;
2) create_service_report ;;
3) create_nwconfig_report ;;
4) create_ssh_report ;;
5) create_localuser_report ;;
20) take_all_report ;;
99) exit 0 ;;
*)
tput setaf 1
echo "Please select from the menu numbers"
tput sgr0
pause
esac
}

# CTRL+C, CTRL+Z
trap '' SIGINT SIGQUIT SIGTSTP

while true
do
clear
show_menu
read_input
done
