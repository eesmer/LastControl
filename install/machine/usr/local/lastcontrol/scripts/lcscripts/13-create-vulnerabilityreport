#!/bin/bash

HOST_NAME=$(hostnamectl --static)
RDIR=/usr/local/lcreports/$HOST_NAME
DATE=$(date)

cat /etc/redhat-release > /tmp/distrocheck 2>/dev/null || cat /etc/*-release > /tmp/distrocheck 2>/dev/null || cat /etc/issue > /tmp/distrocheck 2>/dev/null
grep -i "debian" /tmp/distrocheck &>/dev/null && REP=APT
grep -i "ubuntu" /tmp/distrocheck &>/dev/null && REP=APT
grep -i "centos" /tmp/distrocheck &>/dev/null && REP=YUM
grep -i "red hat" /tmp/distrocheck &>/dev/null && REP=YUM
grep -i "rocky" /tmp/distrocheck &>/dev/null && REP=YUM

rm /tmp/distrocheck

cat > $RDIR/$HOST_NAME.vulnerabilityreport << EOF
====================================================================================================
:::. $HOST_NAME VULNERABILITY CONTROLS REPORT :::.
====================================================================================================
$DATE

----------------------------------------------------------------------------------------------------

EOF

echo "----------------------------------------------------------------------------------------------------" >> $RDIR/$HOST_NAME.vulnerabilityreport
echo "sql Injection Control on $HOST_NAME" >> $RDIR/$HOST_NAME.vulnerabilityreport
echo "----------------------------------------------------------------------------------------------------" >> $RDIR/$HOST_NAME.vulnerabilityreport
# for sql injection 
find /var/log -name 'access*.gz' -type f -exec sh -c "zcat {} | egrep -i '--|union|select|from|or|@|version|char|varchar|exec|passwd'" \; >> $RDIR/$HOST_NAME.vulnerabilityreport
echo "----------------------------------------------------------------------------------------------------" >> $RDIR/$HOST_NAME.vulnerabilityreport
echo "" >> $RDIR/$HOST_NAME.vulnerabilityreport

echo "----------------------------------------------------------------------------------------------------" >> $RDIR/$HOST_NAME.vulnerabilityreport
echo "xss Attack Control on $HOST_NAME" >> $RDIR/$HOST_NAME.vulnerabilityreport
echo "----------------------------------------------------------------------------------------------------" >> $RDIR/$HOST_NAME.vulnerabilityreport
# for xss attack
find /var/log -name 'access*.gz' -type f -exec sh -c "zcat {} | egrep -i 'alert|script|src|cookie|onerror|document'" \; >> $RDIR/$HOST_NAME.vulnerabilityreport
echo "----------------------------------------------------------------------------------------------------" >> $RDIR/$HOST_NAME.vulnerabilityreport
echo "" >> $RDIR/$HOST_NAME.vulnerabilityreport

echo "----------------------------------------------------------------------------------------------------" >> $RDIR/$HOST_NAME.vulnerabilityreport
echo "log4j Attack Control on $HOST_NAME" >> $RDIR/$HOST_NAME.vulnerabilityreport
echo "----------------------------------------------------------------------------------------------------" >> $RDIR/$HOST_NAME.vulnerabilityreport
# for log4j
find /var/log/ -name '*.gz' -type f -exec sh -c "zcat {} | sed -e 's/\${lower://'g | tr -d '}' | egrep -i 'jndi:(ldap[s]?|rmi|dns|nis|iiop|corba|nds|http):'" \; >> $RDIR/$HOST_NAME.vulnerabilityreport
echo "----------------------------------------------------------------------------------------------------" >> $RDIR/$HOST_NAME.vulnerabilityreport
echo "" >> $RDIR/$HOST_NAME.vulnerabilityreport

# for automount
echo "----------------------------------------------------------------------------------------------------" >> $RDIR/$HOST_NAME.vulnerabilityreport
echo "Auto mount / autofs installed and actived Controls on $HOST_NAME" >> $RDIR/$HOST_NAME.vulnerabilityreport
echo "----------------------------------------------------------------------------------------------------" >> $RDIR/$HOST_NAME.vulnerabilityreport
AUTOFSINSTALL=NotInstalled
if [ "$REP" = APT ]; then
	dpkg -l |grep autofs >> /dev/null
	if [ "$?" = 0 ]; then AUTOFSSTAT=$(systemctl is-active autofs.service); AUTOFSINSTALL=Installed; fi
elif [ "$REP" = YUM ]; then
	yum list installed |grep autofs >> /dev/null
	if [ "$?" = 0 ]; then AUTOFSSTAT=$(systemctl is-active autofs.service); AUTOFSINSTALL=Installed; fi
fi
echo "Auto Mount Instal Info: $AUTOFSINSTALL" >> $RDIR/$HOST_NAME.vulnerabilityreport
echo "Auto Mount Active Info: $AUTOFSSTAT" >> $RDIR/$HOST_NAME.vulnerabilityreport
echo "Auto Mount Config Info: Default Settings" >> $RDIR/$HOST_NAME.vulnerabilityreport
echo "----------------------------------------------------------------------------------------------------" >> $RDIR/$HOST_NAME.vulnerabilityreport
echo "" >> $RDIR/$HOST_NAME.vulnerabilityreport

echo "----------------------------------------------------------------------------------------------------" >> $RDIR/$HOST_NAME.vulnerabilityreport
echo "SSH Authentication Log Control on $HOST_NAME" >> $RDIR/$HOST_NAME.vulnerabilityreport
echo "----------------------------------------------------------------------------------------------------" >> $RDIR/$HOST_NAME.vulnerabilityreport
find /var/log -name 'auth*.gz' -type f -exec sh -c "zcat {} | egrep -i 'ssh'" \; \
	|grep -v "Connection closed" \
	|grep -v "Disconnected" \
	|grep -v "Received disconnect" \
	|grep -v "pam_unix" \
	|grep -v "Server listening" \
	|grep -v "terminating." \
	|grep -v "Exiting" \
	|grep -v "Received" \
	>> $RDIR/$HOST_NAME.vulnerabilityreport
echo "----------------------------------------------------------------------------------------------------" >> $RDIR/$HOST_NAME.vulnerabilityreport
echo "" >> $RDIR/$HOST_NAME.vulnerabilityreport

echo "----------------------------------------------------------------------------------------------------" >> $RDIR/$HOST_NAME.vulnerabilityreport
echo "SUDO Authentication Log Control on $HOST_NAME" >> $RDIR/$HOST_NAME.vulnerabilityreport
echo "----------------------------------------------------------------------------------------------------" >> $RDIR/$HOST_NAME.vulnerabilityreport
find /var/log -name 'auth*.gz' -type f -exec sh -c "zcat {} | egrep -i 'su|sudo'" \; \
	|grep -v "Connection closed" \
	|grep -v "Disconnected" \
	|grep -v "Received disconnect" \
	|grep -v "pam_unix" \
	|grep -v "Server listening" \
	|grep -v "systemd-logind" \
	|grep -v "gnome-keyring-daemon" \
	|grep -v "gcr-prompter" \
	>> $RDIR/$HOST_NAME.vulnerabilityreport
echo "----------------------------------------------------------------------------------------------------" >> $RDIR/$HOST_NAME.vulnerabilityreport
echo "" >> $RDIR/$HOST_NAME.vulnerabilityreport

echo "----------------------------------------------------------------------------------------------------" >> $RDIR/$HOST_NAME.suidsgidreport
echo "====================================================================================================" >> $RDIR/$HOST_NAME.suidsgidreport
