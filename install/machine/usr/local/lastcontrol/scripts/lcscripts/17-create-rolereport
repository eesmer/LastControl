#!/bin/bash

HOST_NAME=$(hostnamectl --static)
RDIR=/usr/local/lcreports/$HOST_NAME
DATE=$(date)

cat >> $RDIR/$HOST_NAME.txt << EOF

|---------------------------------------------------------------------------------------------------
|:::. Roles Report .::: |
|---------------------------------------------------------------------------------------------------
EOF

#### DISTRO CHECK
###DISTRO=$(cat /etc/os-release |grep "NAME" |grep -v "PRETTY_NAME" |grep -v "VERSION_CODENAME" |grep -v "CPE_NAME" |cut -d "=" -f2 |cut -d " " -f1 |cut -d '"' -f2)
###echo "Distro: $DISTRO" >> $RDIR/$HOST_NAME.roles
# WHICH DISTRO
cat /etc/redhat-release > $RDIR/distrocheck 2>/dev/null || cat /etc/*-release > $RDIR/distrocheck 2>/dev/null || cat /etc/issue > $RDIR/distrocheck 2>/dev/null
grep -i "debian" $RDIR/distrocheck &>/dev/null && REP=APT
grep -i "ubuntu" $RDIR/distrocheck &>/dev/null && REP=APT
grep -i "centos" $RDIR/distrocheck &>/dev/null && REP=YUM
grep -i "red hat" $RDIR/distrocheck &>/dev/null && REP=YUM
grep -i "rocky" /tmp/distrocheck &>/dev/null && REP=YUM
rm $RDIR/distrocheck &>/dev/null

rm -f $RDIR/$HOST_NAME.roles
nmap debian-wpserver1 |cut -d "/" -f1 |grep -v "Starting Nmap" |grep -v "Nmap scan report" |grep -v "Host is up" |grep -v "Not shown:" |grep -v "PORT"\
	|grep -v "MAC Address:" |grep -v "Nmap done:" > $RDIR/$HOST_NAME.listeningports
sed -i '/^$/d' $RDIR/$HOST_NAME.listeningports

if [[ ! -z $(grep -e "80" $RDIR/$HOST_NAME.listeningports 2>/dev/null) ]] || [[ ! -z $(grep -e "443" $RDIR/$HOST_NAME.listeningports 2>/dev/null) ]]; then
	MACHINEROLE="Web Server"
	echo "Web Server" >> $RDIR/$HOST_NAME.roles
fi


## APACHE WEB SERVER ROLE CHECK
#if [[ ! -z $(apache2 -v 2>/dev/null) ]] || [[ ! -z $(httpd -v 2>/dev/null) ]] || [[ ! -z $(apachectl 2>/dev/null) ]] || [[ ! -z $(apache2ctl 2>/dev/null) ]]; then
## [[ ! -z $(systemctl list-units --type service |grep apache2 2>/dev/null) ]] || [[ ! -z $(systemctl list-units --type service |grep httpd 2>/dev/null) ]]; then
#	echo "Apache-Web-Server" >> $RDIR/$HOST_NAME.roles
#	
#	if [ "$REP" = APT ]; then
#		APACHEVERS=$(apache2 -v |grep "Server version:")
#		APACHESERV=$(systemctl is-active apache2.service)
#		APACHEMODL=$(apachectl -M)
#		APACHEMODAUTH=$(apachectl -M |grep "auth._")
#		APACHEMODLOGS=$(apachectl -M |grep "log_config")
#		APACHEMODWDAV=$(apachectl -M |grep "dav_")
#		APACHEMODSTAT=$(apachectl -M |grep "status_module")
#		APACHEMODINDX=$(apachectl -M |grep "autoindex_module")
#		APACHEMODPROX=$(apachectl -M |grep "proxy_")
#		APACHEMODUDIR=$(apachectl -M |grep "userdir_")
#		APACHEMODINFO=$(apachectl -M |grep "info_module")
#		APACHEMODAUTB=$(apachectl -M |grep "auth_basic_module")
#		APACHEMODAUTD=$(apachectl -M |grep "auth_digest_module")
#
#
#	fi
#	if [ "$REP" = YUM ]; then
#		APACHEVERS=$(httpd -v |grep "Server version:")
#		APACHESERV=$(systemctl is-active httpd.service)
#		APACHEMODL=$(httpd -M)
#		APACHEMODAUTH=$(httpd -M |grep "auth._")
#		APACHEMODLOGS=$(httpd -M |grep "log_config")
#		APACHEMODWDAV=$(httpd -M |grep "dav_")
#		APACHEMODSTAT=$(httpd -M |grep "status_module")
#		APACHEMODINDX=$(httpd -M |grep "autoindex_module")
#		APACHEMODPROX=$(httpd -M |grep "proxy_")
#		APACHEMODUDIR=$(httpd -M |grep "userdir_")
#		APACHEMODINFO=$(httpd -M |grep "info_module")
#		APACHEMODAUTB=$(httpd -M |grep "auth_basic_module")
#		APACHEMODAUTD=$(httpd -M |grep "auth_digest_module")
#
#	fi
#	
#	echo "----------------------------------------------------------------------------------------------------" > $RDIR/$HOST_NAME.Apache-Web-Server
#	echo "|:::. $HOST_NAME Apache Web Server Role Report .::: |                                               " >> $RDIR/$HOST_NAME.Apache-Web-Server
#	echo "----------------------------------------------------------------------------------------------------" >> $RDIR/$HOST_NAME.Apache-Web-Server
#	echo "" >> $RDIR/$HOST_NAME.Apache-Web-Server
#	echo "|Installation Info        : Installed" >> $RDIR/$HOST_NAME.Apache-Web-Server
#	echo "|Version                  : $APACHEVERS" >> $RDIR/$HOST_NAME.Apache-Web-Server
#	echo "|Service Status           : $APACHESERV" >> $RDIR/$HOST_NAME.Apache-Web-Server
#	echo "--------------------------------------------" >> $RDIR/$HOST_NAME.Apache-Web-Server
#	echo "MODULE INFORMATION" >> $RDIR/$HOST_NAME.Apache-Web-Server
#	echo "--------------------------------------------" >> $RDIR/$HOST_NAME.Apache-Web-Server
#	echo "|Load Modules             :" >> $RDIR/$HOST_NAME.Apache-Web-Server
#	echo "$APACHEMODL" >> $RDIR/$HOST_NAME.Apache-Web-Server
#	echo "|Auth. Module Load        :" >> $RDIR/$HOST_NAME.Apache-Web-Server
#	echo "$APACHEMODAUTH" >> $RDIR/$HOST_NAME.Apache-Web-Server
#	echo "|Log Conf. Module Load    :" >> $RDIR/$HOST_NAME.Apache-Web-Server
#	echo "$APACHEMODLOGS" >> $RDIR/$HOST_NAME.Apache-Web-Server
#	
#	echo "|WebDav Module Load       :" >> $RDIR/$HOST_NAME.Apache-Web-Server
#	echo "$APACHEMODWDAV" >> $RDIR/$HOST_NAME.Apache-Web-Server
#	echo "|Status Module Load       :" >> $RDIR/$HOST_NAME.Apache-Web-Server
#	echo "$APACHEMODSTAT" >> $RDIR/$HOST_NAME.Apache-Web-Server
#	echo "|Auto Index Module Load   :" >> $RDIR/$HOST_NAME.Apache-Web-Server
#	echo "$APACHEMODINDX" >> $RDIR/$HOST_NAME.Apache-Web-Server
#	echo "|Proxy Module Load        :" >> $RDIR/$HOST_NAME.Apache-Web-Server
#	echo "$APACHEMODPROX" >> $RDIR/$HOST_NAME.Apache-Web-Server
#	echo "|User Dir. Module Load    :" >> $RDIR/$HOST_NAME.Apache-Web-Server
#	echo "$APACHEMODUDIR" >> $RDIR/$HOST_NAME.Apache-Web-Server
#	echo "|Info Module Load         :" >> $RDIR/$HOST_NAME.Apache-Web-Server
#	echo "$APACHEMODINFO" >> $RDIR/$HOST_NAME.Apache-Web-Server
#	echo "|Auth. Basic Module Load  :" >> $RDIR/$HOST_NAME.Apache-Web-Server
#	echo "$APACHEMODAUTB" >> $RDIR/$HOST_NAME.Apache-Web-Server
#	echo "|Auth. Digest Module Load :" >> $RDIR/$HOST_NAME.Apache-Web-Server
#	echo "$APACHEMODAUTD" >> $RDIR/$HOST_NAME.Apache-Web-Server
#	echo "--------------------------------------------" >> $RDIR/$HOST_NAME.Apache-Web-Server
#
#	echo "|Installation Info        : Installed" >> $RDIR/$HOST_NAME.txt
#	echo "|Version                  : $APACHEVERS" >> $RDIR/$HOST_NAME.txt
#	echo "|Service Status           : $APACHESERV" >> $RDIR/$HOST_NAME.txt
#	#echo "|Load Modules             : $APACHEMODL" >> $RDIR/$HOST_NAME.txt
#	#echo "|Auth. Module Load        : $APACHEMODAUTH" >> $RDIR/$HOST_NAME.txt
#	#echo "|Log Conf. Module Load    : $APACHEMODLOGS" >> $RDIR/$HOST_NAME.txt
#	#echo "|WebDav Module Load       : $APACHEMODWDAV" >> $RDIR/$HOST_NAME.txt
#	#echo "|Status Module Load       : $APACHEMODSTAT" >> $RDIR/$HOST_NAME.txt
#	#echo "|Auto Index Module Load   : $APACHEMODINDX" >> $RDIR/$HOST_NAME.txt
#	#echo "|Proxy Module Load        : $APACHEMODPROX" >> $RDIR/$HOST_NAME.txt
#	#echo "|User Dir. Module Load    : $APACHEMODUDIR" >> $RDIR/$HOST_NAME.txt
#	#echo "|Info Module Load         : $APACHEMODINFO" >> $RDIR/$HOST_NAME.txt
#	#echo "|Auth. Basic Module Load  : $APACHEMODAUTB" >> $RDIR/$HOST_NAME.txt
#	#echo "|Auth. Digest Module Load : $APACHEMODAUTD" >> $RDIR/$HOST_NAME.txt
#	echo "--------------------------------------------" >> $RDIR/$HOST_NAME.txt
#
#	echo "----------------------------------------------------------------------------------------------------" >> $RDIR/$HOST_NAME.Apache-Web-Server
#	echo "====================================================================================================" >> $RDIR/$HOST_NAME.Apache-Web-Server
#fi
#
## WORDPRESS INSTALLED CHECK
#WPFILE=$(find / -name wp-config.php -printf '%h\n')
#if [[ ! -z $WPFILE ]]; then
#	echo "WordPress-Web-Server" >> $RDIR/$HOST_NAME.roles
#	# upload wp-cli file
#	# scp -r -P22 -i $LCKEY root@$LINUXMACHINE:/usr/local/lastcontrol-reports/$LINUXMACHINE  /usr/local/lastcontrolreports/
#	#
#	#
#	echo "----------------------------------------------------------------------------------------------------" > $RDIR/$HOST_NAME.WordPress-Web-Server
#	echo "|:::. $HOST_NAME WordPress Web Server Role Report .::: |                                            " >> $RDIR/$HOST_NAME.WordPress-Web-Server
#	echo "----------------------------------------------------------------------------------------------------" >> $RDIR/$HOST_NAME.WordPress-Web-Server
#	echo "" >> $RDIR/$HOST_NAME.WordPress-Web-Server
#	echo "|WordPress Web Server: Installed" >> $RDIR/$HOST_NAME.WordPress-Web-Server
#	echo "|WordPress Web Server: Installed" >> $RDIR/$HOST_NAME.txt
#	echo "----------------------------------------------------------------------------------------------------" >> $RDIR/$HOST_NAME.WordPress-Web-Server
#	php /tmp/wp-cli.phar --info |grep "PHP version:" >> $RDIR/$HOST_NAME.WordPress-Web-Server
#	php /tmp/wp-cli.phar --info |grep "MySQL version:" >> $RDIR/$HOST_NAME.WordPress-Web-Server
#	echo "----------------------------------------------------------------------------------------------------" >> $RDIR/$HOST_NAME.WordPress-Web-Server
#	echo "" >> $RDIR/$HOST_NAME.WordPress-Web-Server
#	echo "User List" >> $RDIR/$HOST_NAME.WordPress-Web-Server
#	php /tmp/wp-cli.phar user list --allow-root --path=$WPFILE >> $RDIR/$HOST_NAME.WordPress-Web-Server
#	echo "----------------------------------------------------------------------------------------------------" >> $RDIR/$HOST_NAME.WordPress-Web-Server
#	echo "" >> $RDIR/$HOST_NAME.WordPress-Web-Server
#	echo "DB Check" >> $RDIR/$HOST_NAME.WordPress-Web-Server
#	php /tmp/wp-cli.phar db check --allow-root --path=$WPFILE >> $RDIR/$HOST_NAME.WordPress-Web-Server
#	echo "----------------------------------------------------------------------------------------------------" >> $RDIR/$HOST_NAME.WordPress-Web-Server
#	echo "" >> $RDIR/$HOST_NAME.WordPress-Web-Server
#	echo "Plugin List" >> $RDIR/$HOST_NAME.WordPress-Web-Server
#	php /tmp/wp-cli.phar plugin list --allow-root --path=$WPFILE >> $RDIR/$HOST_NAME.WordPress-Web-Server
#	echo "----------------------------------------------------------------------------------------------------" >> $RDIR/$HOST_NAME.WordPress-Web-Server
#	echo "" >> $RDIR/$HOST_NAME.WordPress-Web-Server
#	echo "Plugin Status" >> $RDIR/$HOST_NAME.WordPress-Web-Server
#	php /tmp/wp-cli.phar plugin status --allow-root --path=$WPFILE >> $RDIR/$HOST_NAME.WordPress-Web-Server
#	echo "----------------------------------------------------------------------------------------------------" >> $RDIR/$HOST_NAME.WordPress-Web-Server
#	echo "" >> $RDIR/$HOST_NAME.WordPress-Web-Server
#	echo "Package Status" >> $RDIR/$HOST_NAME.WordPress-Web-Server
#	php /tmp/wp-cli.phar package list --allow-root --path=$WPFILE >> $RDIR/$HOST_NAME.WordPress-Web-Server
#	echo "----------------------------------------------------------------------------------------------------" >> $RDIR/$HOST_NAME.WordPress-Web-Server
#	echo "" >> $RDIR/$HOST_NAME.WordPress-Web-Server
#	echo "Theme List" >> $RDIR/$HOST_NAME.WordPress-Web-Server
##	php /tmp/wp-cli.phar theme list --allow-root --path=$WPFILE |grep -v "status" >> $RDIR/$HOST_NAME.WordPress-Web-Server
#	echo "----------------------------------------------------------------------------------------------------" >> $RDIR/$HOST_NAME.WordPress-Web-Server
#	echo "" >> $RDIR/$HOST_NAME.WordPress-Web-Server
#	
#	echo "----------------------------------------------------------------------------------------------------" >> $RDIR/$HOST_NAME.WordPress-Web-Server
#	echo "====================================================================================================" >> $RDIR/$HOST_NAME.WordPress-Web-Server
#fi
#
## MYSQL DB SERVER ROLE CHECK
#if [[ ! -z $(mysql --print-defaults 2>/dev/null) ]]; then
#	echo "MySql-DB-Server" >> $RDIR/$HOST_NAME.roles
#	MYSQLVER=$(mysql -V)
#	MYSQLRUN=$(netstat -tulanp |grep "mysqld")
#	MYSQLSER=$(systemctl is-active mysql.service)
#	echo "----------------------------------------------------------------------------------------------------" > $RDIR/$HOST_NAME.MySql-DB-Server
#	echo "|:::. $HOST_NAME MySql DB Server Role Report .::: |                                                 " >> $RDIR/$HOST_NAME.MySql-DB-Server
#	echo "----------------------------------------------------------------------------------------------------" >> $RDIR/$HOST_NAME.MySql-DB-Server
#	echo "" >> $RDIR/$HOST_NAME.MySql-DB-Server
#	echo "|MySql DB Server: Installed" >> $RDIR/$HOST_NAME.MySql-DB-Server
#	echo "|MySql Version  : $MYSQLVER" >> $RDIR/$HOST_NAME.MySql-DB-Server
#	echo "|MySql Service  : $MYSQLSER" >> $RDIR/$HOST_NAME.MySql-DB-Server
#	echo "|MySql DB Server: Installed" >> $RDIR/$HOST_NAME.txt
#	echo "|MySql Version  : $MYSQLVER" >> $RDIR/$HOST_NAME.txt
#	echo "|MySql Service  : $MYSQLSER" >> $RDIR/$HOST_NAME.txt
#	echo "|$MYSQLRUN" >> $RDIR/$HOST_NAME.txt
##	echo "----------------------------------------------------------------------------------------------------" >> $RDIR/$HOST_NAME.MySql-DB-Server
#	echo "====================================================================================================" >> $RDIR/$HOST_NAME.MySql-DB-Server
#fi
#
## POSTGRES DB SERVER ROLE CHECK
#if [[ ! -z $(psql --help 2>/dev/null) ]]; then
#	echo "PostgreSQL-DB-Server" >> $RDIR/$HOST_NAME.roles
#	POSTGREVER=$(psql -V)
#	POSTGRESER=$(systemctl is-active postgresql.service)
#	echo "----------------------------------------------------------------------------------------------------" > $RDIR/$HOST_NAME.PostgreSQL-DB-Server
#	echo "|:::. $HOST_NAME PostgreSQL DB Server Role Report .::: |                                            " >> $RDIR/$HOST_NAME.PostgreSQL-DB-Server
#	echo "----------------------------------------------------------------------------------------------------" >> $RDIR/$HOST_NAME.PostgreSQL-DB-Server
#	echo "" >> $RDIR/$HOST_NAME.PostgreSQL-DB-Server
#	echo "|PostgreSQL DB Server: Installed" >> $RDIR/$HOST_NAME.PostgreSQL-DB-Server
#	echo "|PostgreSQL Version  : $POSTGREVER" >> $RDIR/$HOST_NAME.PostgreSQL-DB-Server
#	echo "|PostgreSQL Service  : $POSTGRESER" >> $RDIR/$HOST_NAME.PostgreSQL-DB-Server
#	echo "|PostgreSQL DB Server: Installed" >> $RDIR/$HOST_NAME.txt
#        echo "|PostgreSQL Version  : $POSTGREVER" >> $RDIR/$HOST_NAME.txt
#       echo "|PostgreSQL Service  : $POSTGRESER" >> $RDIR/$HOST_NAME.txt
#	echo "----------------------------------------------------------------------------------------------------" >> $RDIR/$HOST_NAME.PostgreSQL-DB-Server
#	echo "====================================================================================================" >> $RDIR/$HOST_NAME.PostgreSQL-DB-Server
#fi
#

echo "----------------------------------------------------------------------------------------------------" >> $RDIR/$HOST_NAME.txt
